
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.xbtstudio.school.init;

import net.xbtstudio.school.block.YellowtallwallcornerBlock;
import net.xbtstudio.school.block.YellowtallwallBlock;
import net.xbtstudio.school.block.YellowmusicchairBlock;
import net.xbtstudio.school.block.YellowconcretewallBlock;
import net.xbtstudio.school.block.YellowconcretestairBlock;
import net.xbtstudio.school.block.WindowairconditioningBlock;
import net.xbtstudio.school.block.WindowairconditionergreenwindowBlock;
import net.xbtstudio.school.block.WindowairconditionerbluewindowBlock;
import net.xbtstudio.school.block.WindowairconditionerblackwindowBlock;
import net.xbtstudio.school.block.WindowWhiteUpSingleBlock;
import net.xbtstudio.school.block.WindowWhiteUpBlock;
import net.xbtstudio.school.block.WindowWhiteDownSingleBlock;
import net.xbtstudio.school.block.WindowWhiteDownBlock;
import net.xbtstudio.school.block.WindowOldUpSingleBlock;
import net.xbtstudio.school.block.WindowOldUpBlock;
import net.xbtstudio.school.block.WindowOldDownSingleBlock;
import net.xbtstudio.school.block.WindowOldDownBlock;
import net.xbtstudio.school.block.WindowBlackUpSingleBlock;
import net.xbtstudio.school.block.WindowBlackUpBlock;
import net.xbtstudio.school.block.WindowBlackDownSingleBlock;
import net.xbtstudio.school.block.WindowBlackDownBlock;
import net.xbtstudio.school.block.WhiteConcreteWallBlock;
import net.xbtstudio.school.block.WhiteConcreteStairBlock;
import net.xbtstudio.school.block.WhiteBoardBlock;
import net.xbtstudio.school.block.WaterdispenserBlock;
import net.xbtstudio.school.block.VisualacuitychartBlock;
import net.xbtstudio.school.block.UpperwideglasswindowsblacK1Block;
import net.xbtstudio.school.block.UpperwideglasswindowsblUEBlock;
import net.xbtstudio.school.block.UpperwideglasswindowsWHBlock;
import net.xbtstudio.school.block.UpperwideglasswindowsGreenaBlock;
import net.xbtstudio.school.block.UpperwideglasswindowsGreenBlock;
import net.xbtstudio.school.block.UpperwideglasswindowsGEBlock;
import net.xbtstudio.school.block.UpperwideglasswindowsBlackBlock;
import net.xbtstudio.school.block.UbuntuSEEWOBlock;
import net.xbtstudio.school.block.UbuntuBlock;
import net.xbtstudio.school.block.TopLampBlock;
import net.xbtstudio.school.block.ToiletdoorsONBlock;
import net.xbtstudio.school.block.ToiletdoorsMIONBlock;
import net.xbtstudio.school.block.ToiletdoorsMIBlock;
import net.xbtstudio.school.block.ToiletdoorsBlock;
import net.xbtstudio.school.block.ToiletdoorpanelsMIBlock;
import net.xbtstudio.school.block.ToiletdoorpanelsBlock;
import net.xbtstudio.school.block.TileBlock;
import net.xbtstudio.school.block.TerrazzoBlock;
import net.xbtstudio.school.block.TandempedaltrainerBlock;
import net.xbtstudio.school.block.TallWallCornerBlock;
import net.xbtstudio.school.block.TallWallBlock;
import net.xbtstudio.school.block.TabletennistableBlock;
import net.xbtstudio.school.block.TVBlock;
import net.xbtstudio.school.block.StudyhardBlock;
import net.xbtstudio.school.block.StripChandelierBlock;
import net.xbtstudio.school.block.SscreeedBlock;
import net.xbtstudio.school.block.SquattingurinalBlock;
import net.xbtstudio.school.block.SpringFestivalCoupletsBlock;
import net.xbtstudio.school.block.SpacewalkerBlock;
import net.xbtstudio.school.block.SmartBrandOnBlock;
import net.xbtstudio.school.block.SmartBrandBlock;
import net.xbtstudio.school.block.SmallwindowswhiteBlock;
import net.xbtstudio.school.block.SmallwindowsgreenBlock;
import net.xbtstudio.school.block.Smallwindowsgreen1Block;
import net.xbtstudio.school.block.SmallwindowsblueBlock;
import net.xbtstudio.school.block.Smallwindowsblue1Block;
import net.xbtstudio.school.block.SmallwindowsblackBlock;
import net.xbtstudio.school.block.Smallwindowsblack1Block;
import net.xbtstudio.school.block.Smallwindows1Block;
import net.xbtstudio.school.block.SmallslidiwindowblueBlock;
import net.xbtstudio.school.block.SmallslidinwindowblueBlock;
import net.xbtstudio.school.block.SmallslidingwindowgreeBlock;
import net.xbtstudio.school.block.SmallslidingwindowgreBlock;
import net.xbtstudio.school.block.SmallslidingwindowGreenBlock;
import net.xbtstudio.school.block.SmallslidingwindowGreen1Block;
import net.xbtstudio.school.block.SmallslidingwindowBlueBlock;
import net.xbtstudio.school.block.SmallslidingwindowBlue1Block;
import net.xbtstudio.school.block.SmallslidingwindowBlock;
import net.xbtstudio.school.block.SmallslidingwindowBlackBlock;
import net.xbtstudio.school.block.SmallslidingwindowBlack1Block;
import net.xbtstudio.school.block.Smallslidingwindow1Block;
import net.xbtstudio.school.block.SmallslidingwindobkBlock;
import net.xbtstudio.school.block.SmallslidingwindobbkBlock;
import net.xbtstudio.school.block.SmallslidingwindoBlock;
import net.xbtstudio.school.block.Smallslidingwindo1Block;
import net.xbtstudio.school.block.SlidingwindowsGreenBlock;
import net.xbtstudio.school.block.SlidingwindowsGreen1Block;
import net.xbtstudio.school.block.SlidingwindowsBlueBlock;
import net.xbtstudio.school.block.SlidingwindowsBlue1Block;
import net.xbtstudio.school.block.SlidingwindowsBlock;
import net.xbtstudio.school.block.SlidingwindowsBlackBlock;
import net.xbtstudio.school.block.SlidingwindowsBlack1Block;
import net.xbtstudio.school.block.Slidingwindows1Block;
import net.xbtstudio.school.block.SlantairconditionBlock;
import net.xbtstudio.school.block.SeewoOnBlock;
import net.xbtstudio.school.block.SeewoBlock;
import net.xbtstudio.school.block.SeewoBSODBlock;
import net.xbtstudio.school.block.See10Block;
import net.xbtstudio.school.block.ScreenBlock;
import net.xbtstudio.school.block.SchooltablesBlock;
import net.xbtstudio.school.block.SchoolBellControllerBlock;
import net.xbtstudio.school.block.SatellitetelevisionBlock;
import net.xbtstudio.school.block.RockerboardforchildrenBlock;
import net.xbtstudio.school.block.RestaurantexhausthoodBlock;
import net.xbtstudio.school.block.RedtallwallBlock;
import net.xbtstudio.school.block.RedmusicchairBlock;
import net.xbtstudio.school.block.RedconcretewallBlock;
import net.xbtstudio.school.block.RecalsoomBlock;
import net.xbtstudio.school.block.RadiatorBlock;
import net.xbtstudio.school.block.REDtallwallcornerBlock;
import net.xbtstudio.school.block.REDconcretestairBlock;
import net.xbtstudio.school.block.QLargeglassslidingwindowsgreenBlock;
import net.xbtstudio.school.block.QLargeglassslidingwindowsblueBlock;
import net.xbtstudio.school.block.QLargeglassslidingwindowsblackBlock;
import net.xbtstudio.school.block.QLargeglassslidingwindowsBlock;
import net.xbtstudio.school.block.Pushandpullchalkboard4Block;
import net.xbtstudio.school.block.Pushandpullchalkboard3Block;
import net.xbtstudio.school.block.Pushandpullchalkboard2Block;
import net.xbtstudio.school.block.Pushandpullchalkboard1Block;
import net.xbtstudio.school.block.ProjectorBlock;
import net.xbtstudio.school.block.PrinterBlock;
import net.xbtstudio.school.block.PodiumBlock;
import net.xbtstudio.school.block.PipejBlock;
import net.xbtstudio.school.block.PIPEIBlock;
import net.xbtstudio.school.block.PIPEHBlock;
import net.xbtstudio.school.block.PIPEGBlock;
import net.xbtstudio.school.block.PIPEFBlock;
import net.xbtstudio.school.block.PIPEEBlock;
import net.xbtstudio.school.block.PIPEDBlock;
import net.xbtstudio.school.block.PIPECBlock;
import net.xbtstudio.school.block.PIPEBlock;
import net.xbtstudio.school.block.PIPEBBlock;
import net.xbtstudio.school.block.PConBlock;
import net.xbtstudio.school.block.PCWXPBlock;
import net.xbtstudio.school.block.PCW8Block;
import net.xbtstudio.school.block.PCW7Block;
import net.xbtstudio.school.block.PCW10Block;
import net.xbtstudio.school.block.PCMCBlock;
import net.xbtstudio.school.block.PCDELKBlock;
import net.xbtstudio.school.block.PCBlock;
import net.xbtstudio.school.block.OutdoortilesBlock;
import net.xbtstudio.school.block.OutdoorspeakersBlock;
import net.xbtstudio.school.block.OutdoorslidingdoorsBlock;
import net.xbtstudio.school.block.Outdoorslidingdoors1Block;
import net.xbtstudio.school.block.OrangetallwallcornerBlock;
import net.xbtstudio.school.block.OrangetallwallBlock;
import net.xbtstudio.school.block.OrangemusicchairBlock;
import net.xbtstudio.school.block.OrangeconcretestairQBlock;
import net.xbtstudio.school.block.OrangeconcretestairBlock;
import net.xbtstudio.school.block.OntheminislidingwindowGreenBlock;
import net.xbtstudio.school.block.OntheminislidingwindowGreen1Block;
import net.xbtstudio.school.block.OntheminislidingwindowBlueBlock;
import net.xbtstudio.school.block.OntheminislidingwindowBlue1Block;
import net.xbtstudio.school.block.OntheminislidingwindowBlock;
import net.xbtstudio.school.block.OntheminislidingwindowBlackBlock;
import net.xbtstudio.school.block.OntheminislidingwindowBlack1Block;
import net.xbtstudio.school.block.Ontheminislidingwindow1Block;
import net.xbtstudio.school.block.OldPcOnBlock;
import net.xbtstudio.school.block.OldPcGslcBlock;
import net.xbtstudio.school.block.OldPcBlock;
import net.xbtstudio.school.block.ONDeskwithdesktopcomputerBlock;
import net.xbtstudio.school.block.OFFSNetworkBlock;
import net.xbtstudio.school.block.NOTVBlock;
import net.xbtstudio.school.block.NOCRTTVBlock;
import net.xbtstudio.school.block.MobileblackBlock;
import net.xbtstudio.school.block.MobileRedFlagsBlock;
import net.xbtstudio.school.block.MinislidingwindowGreenBlock;
import net.xbtstudio.school.block.MinislidingwindowGreen1Block;
import net.xbtstudio.school.block.MinislidingwindowBlueBlock;
import net.xbtstudio.school.block.MinislidingwindowBlue1Block;
import net.xbtstudio.school.block.MinislidingwindowBlock;
import net.xbtstudio.school.block.MinislidingwindowBlackBlock;
import net.xbtstudio.school.block.MinislidingwindowBlack1Block;
import net.xbtstudio.school.block.Minislidingwindow1Block;
import net.xbtstudio.school.block.MinigreenvintageglasswindowsBlock;
import net.xbtstudio.school.block.Minigreenvintageglasswindows1Block;
import net.xbtstudio.school.block.MarbletilesBlock;
import net.xbtstudio.school.block.MainUnitBlock;
import net.xbtstudio.school.block.LoudspeakerBlock;
import net.xbtstudio.school.block.LightcatsettopboxBlock;
import net.xbtstudio.school.block.LargetilesBlock;
import net.xbtstudio.school.block.LargeslidingwindowsbbkBlock;
import net.xbtstudio.school.block.LargeslidingwindowsGreenBlock;
import net.xbtstudio.school.block.LargeslidingwindowsGFBlock;
import net.xbtstudio.school.block.LargeslidingwindowsGEBlock;
import net.xbtstudio.school.block.LargeslidingwindowsBlueBlock;
import net.xbtstudio.school.block.LargeslidingwindowsBlue1Block;
import net.xbtstudio.school.block.LargeslidingwindowsBlock;
import net.xbtstudio.school.block.LargeslidingwindowsBlackBlock;
import net.xbtstudio.school.block.LargeslidingwindowsBlack1Block;
import net.xbtstudio.school.block.LargeslidingwindowsBLLBlock;
import net.xbtstudio.school.block.LargeslidingwindowsBLBlock;
import net.xbtstudio.school.block.Largeslidingwindows1Block;
import net.xbtstudio.school.block.LargeslidingwindowGreen1Block;
import net.xbtstudio.school.block.LargeslidingwindowBlock;
import net.xbtstudio.school.block.Largeslidingwindow1Block;
import net.xbtstudio.school.block.LargeslidingwindobbkBlock;
import net.xbtstudio.school.block.LargeglasswindowsBlueBlock;
import net.xbtstudio.school.block.LargeglasswindowsBlackBlock;
import net.xbtstudio.school.block.LargeglasswindowQBlock;
import net.xbtstudio.school.block.LargeglasswindowGreenBlock;
import net.xbtstudio.school.block.LargeglasswindowBlock;
import net.xbtstudio.school.block.LargeglassslidingwindowsgreenBlock;
import net.xbtstudio.school.block.LargeglassslidingwindowsblueBlock;
import net.xbtstudio.school.block.LargeglassslidingwindowsblackBlock;
import net.xbtstudio.school.block.LargeglassslidingwindowsBlock;
import net.xbtstudio.school.block.LaptopOnBlock;
import net.xbtstudio.school.block.LaptopBlock;
import net.xbtstudio.school.block.LaboratoryexhausthoodBlock;
import net.xbtstudio.school.block.Laboratoryexhausthood2X2Block;
import net.xbtstudio.school.block.LaboratoryPoolBlock;
import net.xbtstudio.school.block.LaboratoryLightBlock;
import net.xbtstudio.school.block.LaboratoryDeskBlock;
import net.xbtstudio.school.block.LaboratoryChairBlock;
import net.xbtstudio.school.block.LaboratoryCabinetBlock;
import net.xbtstudio.school.block.June1stChildrensNetworkBlock;
import net.xbtstudio.school.block.ItmusthavebeenOptifinetodoitBlock;
import net.xbtstudio.school.block.IronbarsBlock;
import net.xbtstudio.school.block.HighspeedrailrailingsBlock;
import net.xbtstudio.school.block.HalfwallfenceBlock;
import net.xbtstudio.school.block.GreytallwallcornerBlock;
import net.xbtstudio.school.block.GreytallwallBlock;
import net.xbtstudio.school.block.GreyconcretewallBlock;
import net.xbtstudio.school.block.GreyconcretestairBlock;
import net.xbtstudio.school.block.Greenvintageglasswindows1Block;
import net.xbtstudio.school.block.GreentallwallcornerBlock;
import net.xbtstudio.school.block.GreentallwallBlock;
import net.xbtstudio.school.block.GreenmusicchairBlock;
import net.xbtstudio.school.block.GreendoubleglasswindowsBlock;
import net.xbtstudio.school.block.GreenconcretewallBlock;
import net.xbtstudio.school.block.GreenconcretestairBlock;
import net.xbtstudio.school.block.GlassFloorBlock;
import net.xbtstudio.school.block.GlassDoorBlock;
import net.xbtstudio.school.block.FuBlock;
import net.xbtstudio.school.block.FluorescentlampsBlock;
import net.xbtstudio.school.block.FitnesstreadmillBlock;
import net.xbtstudio.school.block.FMRadioBlock;
import net.xbtstudio.school.block.ExtralargeslidingwindowsGreenBlock;
import net.xbtstudio.school.block.ExtralargeslidingwindowsGreen1Block;
import net.xbtstudio.school.block.ExtralargeslidingwindowsBlueBlock;
import net.xbtstudio.school.block.ExtralargeslidingwindowsBlue1Block;
import net.xbtstudio.school.block.ExtralargeslidingwindowsBlock;
import net.xbtstudio.school.block.ExtralargeslidingwindowsBlackBlock;
import net.xbtstudio.school.block.ExtralargeslidingwindowsBlack1Block;
import net.xbtstudio.school.block.Extralargeslidingwindows1Block;
import net.xbtstudio.school.block.EverydayBlock;
import net.xbtstudio.school.block.EasicameraBlock;
import net.xbtstudio.school.block.DeskwithdesktopcomputerBlock;
import net.xbtstudio.school.block.DeskBlock;
import net.xbtstudio.school.block.DVBTSBlock;
import net.xbtstudio.school.block.DVBCABLEBlock;
import net.xbtstudio.school.block.DTMBDVBTBlock;
import net.xbtstudio.school.block.CorporatdeskBlock;
import net.xbtstudio.school.block.CornerwindowssmallBlock;
import net.xbtstudio.school.block.Cornerwindowssmall3Block;
import net.xbtstudio.school.block.Cornerwindowssmall2Block;
import net.xbtstudio.school.block.Cornerwindowssmall1Block;
import net.xbtstudio.school.block.CornerwindowsHengsuBlock;
import net.xbtstudio.school.block.CornerwindowsHengsu4Block;
import net.xbtstudio.school.block.CornerwindowsHengsu3Block;
import net.xbtstudio.school.block.CornerwindowsHengsu1Block;
import net.xbtstudio.school.block.CornerwindowsBlock;
import net.xbtstudio.school.block.Cornerwindows3Block;
import net.xbtstudio.school.block.Cornerwindows2Block;
import net.xbtstudio.school.block.Cornerwindows1Block;
import net.xbtstudio.school.block.CodeforstudentsBlock;
import net.xbtstudio.school.block.ClassroomdoorsBlock;
import net.xbtstudio.school.block.ClassroomLightBlock;
import net.xbtstudio.school.block.ClasscardBlock;
import net.xbtstudio.school.block.Classcard3Block;
import net.xbtstudio.school.block.Classcard2Block;
import net.xbtstudio.school.block.CircularairconditioningBlock;
import net.xbtstudio.school.block.ChairBlock;
import net.xbtstudio.school.block.CertificateOfMeritBlock;
import net.xbtstudio.school.block.CasementwindowsBlock;
import net.xbtstudio.school.block.Casementwindows1x2Block;
import net.xbtstudio.school.block.Casementwindows1x23Block;
import net.xbtstudio.school.block.Casementwindows1x22Block;
import net.xbtstudio.school.block.Casementwindows1x21Block;
import net.xbtstudio.school.block.Casementwindows1x13Block;
import net.xbtstudio.school.block.Casementwindows1x12Block;
import net.xbtstudio.school.block.Casementwindows1Block;
import net.xbtstudio.school.block.Casementwindows12Block;
import net.xbtstudio.school.block.Casementwindows11Block;
import net.xbtstudio.school.block.CanteenkitchenstoveBlock;
import net.xbtstudio.school.block.CanteenkitchenrefrigeratorBlock;
import net.xbtstudio.school.block.CanteenkitchencountertopBlock;
import net.xbtstudio.school.block.CanteeninsulatedtableBlock;
import net.xbtstudio.school.block.CafeteriakitchensinkBlock;
import net.xbtstudio.school.block.Caasementwindows1x2Block;
import net.xbtstudio.school.block.Caasementwindows1x22Block;
import net.xbtstudio.school.block.CRTTVBlock;
import net.xbtstudio.school.block.BroadcastcrewBlock;
import net.xbtstudio.school.block.BooksBlock;
import net.xbtstudio.school.block.BluetallwallcornerBlock;
import net.xbtstudio.school.block.BluetallwallBlock;
import net.xbtstudio.school.block.BluemusicchairBlock;
import net.xbtstudio.school.block.BlueconcretestairqBlock;
import net.xbtstudio.school.block.BlueconcretestairBlock;
import net.xbtstudio.school.block.BlacktilesBlock;
import net.xbtstudio.school.block.BlacktallwallcornerBlock;
import net.xbtstudio.school.block.BlacktallwallBlock;
import net.xbtstudio.school.block.BlackconcretewallBlock;
import net.xbtstudio.school.block.BlackconcretestairBlock;
import net.xbtstudio.school.block.BlackBoardBlock;
import net.xbtstudio.school.block.BillboardsBlock;
import net.xbtstudio.school.block.BalanceBlock;
import net.xbtstudio.school.block.AntitheftnetsAIRBlock;
import net.xbtstudio.school.block.Antitheftnets2x2Block;
import net.xbtstudio.school.block.Antitheftnets2X1Block;
import net.xbtstudio.school.block.Antitheftnets1X2Block;
import net.xbtstudio.school.block.Antitheftnets1X1Block;
import net.xbtstudio.school.block.AlcoholLampBlock;
import net.xbtstudio.school.block.ActiveopticalaccessdevicesBlock;
import net.xbtstudio.school.block.AcinaBlock;
import net.xbtstudio.school.block.AcinBBlock;
import net.xbtstudio.school.block.AcNvidiaBlock;
import net.xbtstudio.school.block.AcLargeOutBlock;
import net.xbtstudio.school.block.AcBracketBlock;
import net.xbtstudio.school.block.ACOutBlock;
import net.xbtstudio.school.SchoolMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.RegisterColorHandlersEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

public class SchoolModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, SchoolMod.MODID);
	public static final RegistryObject<Block> SCREEN = REGISTRY.register("screen", () -> new ScreenBlock());
	public static final RegistryObject<Block> PC = REGISTRY.register("pc", () -> new PCBlock());
	public static final RegistryObject<Block> SEEWO = REGISTRY.register("seewo", () -> new SeewoBlock());
	public static final RegistryObject<Block> AC_OUT = REGISTRY.register("ac_out", () -> new ACOutBlock());
	public static final RegistryObject<Block> ACINA = REGISTRY.register("acina", () -> new AcinaBlock());
	public static final RegistryObject<Block> WINDOW_BLACK_UP = REGISTRY.register("window_black_up", () -> new WindowBlackUpBlock());
	public static final RegistryObject<Block> WINDOW_BLACK_DOWN = REGISTRY.register("window_black_down", () -> new WindowBlackDownBlock());
	public static final RegistryObject<Block> WINDOW_WHITE_DOWN = REGISTRY.register("window_white_down", () -> new WindowWhiteDownBlock());
	public static final RegistryObject<Block> WINDOW_WHITE_UP = REGISTRY.register("window_white_up", () -> new WindowWhiteUpBlock());
	public static final RegistryObject<Block> MAIN_UNIT = REGISTRY.register("main_unit", () -> new MainUnitBlock());
	public static final RegistryObject<Block> BLACK_BOARD = REGISTRY.register("black_board", () -> new BlackBoardBlock());
	public static final RegistryObject<Block> CLASSROOM_LIGHT = REGISTRY.register("classroom_light", () -> new ClassroomLightBlock());
	public static final RegistryObject<Block> AC_NVIDIA = REGISTRY.register("ac_nvidia", () -> new AcNvidiaBlock());
	public static final RegistryObject<Block> SEEWO_ON = REGISTRY.register("seewo_on", () -> new SeewoOnBlock());
	public static final RegistryObject<Block> DESK = REGISTRY.register("desk", () -> new DeskBlock());
	public static final RegistryObject<Block> CHAIR = REGISTRY.register("chair", () -> new ChairBlock());
	public static final RegistryObject<Block> GLASS_FLOOR = REGISTRY.register("glass_floor", () -> new GlassFloorBlock());
	public static final RegistryObject<Block> BOOKS = REGISTRY.register("books", () -> new BooksBlock());
	public static final RegistryObject<Block> LABORATORY_DESK = REGISTRY.register("laboratory_desk", () -> new LaboratoryDeskBlock());
	public static final RegistryObject<Block> LABORATORY_POOL = REGISTRY.register("laboratory_pool", () -> new LaboratoryPoolBlock());
	public static final RegistryObject<Block> LABORATORY_CHAIR = REGISTRY.register("laboratory_chair", () -> new LaboratoryChairBlock());
	public static final RegistryObject<Block> ALCOHOL_LAMP = REGISTRY.register("alcohol_lamp", () -> new AlcoholLampBlock());
	public static final RegistryObject<Block> SEEWO_BSOD = REGISTRY.register("seewo_bsod", () -> new SeewoBSODBlock());
	public static final RegistryObject<Block> LABORATORY_CABINET = REGISTRY.register("laboratory_cabinet", () -> new LaboratoryCabinetBlock());
	public static final RegistryObject<Block> P_CON = REGISTRY.register("p_con", () -> new PConBlock());
	public static final RegistryObject<Block> SCHOOL_BELL_CONTROLLER = REGISTRY.register("school_bell_controller", () -> new SchoolBellControllerBlock());
	public static final RegistryObject<Block> LABORATORY_LIGHT = REGISTRY.register("laboratory_light", () -> new LaboratoryLightBlock());
	public static final RegistryObject<Block> GLASS_DOOR = REGISTRY.register("glass_door", () -> new GlassDoorBlock());
	public static final RegistryObject<Block> BALANCE = REGISTRY.register("balance", () -> new BalanceBlock());
	public static final RegistryObject<Block> TALL_WALL = REGISTRY.register("tall_wall", () -> new TallWallBlock());
	public static final RegistryObject<Block> FU = REGISTRY.register("fu", () -> new FuBlock());
	public static final RegistryObject<Block> PROJECTOR = REGISTRY.register("projector", () -> new ProjectorBlock());
	public static final RegistryObject<Block> WHITE_CONCRETE_STAIR = REGISTRY.register("white_concrete_stair", () -> new WhiteConcreteStairBlock());
	public static final RegistryObject<Block> WHITE_CONCRETE_WALL = REGISTRY.register("white_concrete_wall", () -> new WhiteConcreteWallBlock());
	public static final RegistryObject<Block> WINDOW_BLACK_DOWN_SINGLE = REGISTRY.register("window_black_down_single", () -> new WindowBlackDownSingleBlock());
	public static final RegistryObject<Block> WINDOW_BLACK_UP_SINGLE = REGISTRY.register("window_black_up_single", () -> new WindowBlackUpSingleBlock());
	public static final RegistryObject<Block> WINDOW_WHITE_UP_SINGLE = REGISTRY.register("window_white_up_single", () -> new WindowWhiteUpSingleBlock());
	public static final RegistryObject<Block> WINDOW_WHITE_DOWN_SINGLE = REGISTRY.register("window_white_down_single", () -> new WindowWhiteDownSingleBlock());
	public static final RegistryObject<Block> TOP_LAMP = REGISTRY.register("top_lamp", () -> new TopLampBlock());
	public static final RegistryObject<Block> ACIN_B = REGISTRY.register("acin_b", () -> new AcinBBlock());
	public static final RegistryObject<Block> STRIP_CHANDELIER = REGISTRY.register("strip_chandelier", () -> new StripChandelierBlock());
	public static final RegistryObject<Block> WINDOW_OLD_DOWN = REGISTRY.register("window_old_down", () -> new WindowOldDownBlock());
	public static final RegistryObject<Block> WINDOW_OLD_UP = REGISTRY.register("window_old_up", () -> new WindowOldUpBlock());
	public static final RegistryObject<Block> AC_BRACKET = REGISTRY.register("ac_bracket", () -> new AcBracketBlock());
	public static final RegistryObject<Block> WHITE_BOARD = REGISTRY.register("white_board", () -> new WhiteBoardBlock());
	public static final RegistryObject<Block> PRINTER = REGISTRY.register("printer", () -> new PrinterBlock());
	public static final RegistryObject<Block> PCMC = REGISTRY.register("pcmc", () -> new PCMCBlock());
	public static final RegistryObject<Block> OLD_PC = REGISTRY.register("old_pc", () -> new OldPcBlock());
	public static final RegistryObject<Block> OLD_PC_ON = REGISTRY.register("old_pc_on", () -> new OldPcOnBlock());
	public static final RegistryObject<Block> OLD_PC_GSLC = REGISTRY.register("old_pc_gslc", () -> new OldPcGslcBlock());
	public static final RegistryObject<Block> LOUDSPEAKER = REGISTRY.register("loudspeaker", () -> new LoudspeakerBlock());
	public static final RegistryObject<Block> AC_LARGE_OUT = REGISTRY.register("ac_large_out", () -> new AcLargeOutBlock());
	public static final RegistryObject<Block> WINDOW_OLD_DOWN_SINGLE = REGISTRY.register("window_old_down_single", () -> new WindowOldDownSingleBlock());
	public static final RegistryObject<Block> WINDOW_OLD_UP_SINGLE = REGISTRY.register("window_old_up_single", () -> new WindowOldUpSingleBlock());
	public static final RegistryObject<Block> SPRING_FESTIVAL_COUPLETS = REGISTRY.register("spring_festival_couplets", () -> new SpringFestivalCoupletsBlock());
	public static final RegistryObject<Block> TALL_WALL_CORNER = REGISTRY.register("tall_wall_corner", () -> new TallWallCornerBlock());
	public static final RegistryObject<Block> CERTIFICATE_OF_MERIT = REGISTRY.register("certificate_of_merit", () -> new CertificateOfMeritBlock());
	public static final RegistryObject<Block> EASICAMERA = REGISTRY.register("easicamera", () -> new EasicameraBlock());
	public static final RegistryObject<Block> SMART_BRAND = REGISTRY.register("smart_brand", () -> new SmartBrandBlock());
	public static final RegistryObject<Block> SMART_BRAND_ON = REGISTRY.register("smart_brand_on", () -> new SmartBrandOnBlock());
	public static final RegistryObject<Block> LAPTOP = REGISTRY.register("laptop", () -> new LaptopBlock());
	public static final RegistryObject<Block> LAPTOP_ON = REGISTRY.register("laptop_on", () -> new LaptopOnBlock());
	public static final RegistryObject<Block> GREENDOUBLEGLASSWINDOWS = REGISTRY.register("greendoubleglasswindows", () -> new GreendoubleglasswindowsBlock());
	public static final RegistryObject<Block> MINIGREENVINTAGEGLASSWINDOWS = REGISTRY.register("minigreenvintageglasswindows", () -> new MinigreenvintageglasswindowsBlock());
	public static final RegistryObject<Block> MINIGREENVINTAGEGLASSWINDOWS_1 = REGISTRY.register("minigreenvintageglasswindows_1", () -> new Minigreenvintageglasswindows1Block());
	public static final RegistryObject<Block> GREENVINTAGEGLASSWINDOWS_1 = REGISTRY.register("greenvintageglasswindows_1", () -> new Greenvintageglasswindows1Block());
	public static final RegistryObject<Block> CLASSCARD = REGISTRY.register("classcard", () -> new ClasscardBlock());
	public static final RegistryObject<Block> PUSHANDPULLCHALKBOARD_1 = REGISTRY.register("pushandpullchalkboard_1", () -> new Pushandpullchalkboard1Block());
	public static final RegistryObject<Block> PUSHANDPULLCHALKBOARD_2 = REGISTRY.register("pushandpullchalkboard_2", () -> new Pushandpullchalkboard2Block());
	public static final RegistryObject<Block> PUSHANDPULLCHALKBOARD_3 = REGISTRY.register("pushandpullchalkboard_3", () -> new Pushandpullchalkboard3Block());
	public static final RegistryObject<Block> PUSHANDPULLCHALKBOARD_4 = REGISTRY.register("pushandpullchalkboard_4", () -> new Pushandpullchalkboard4Block());
	public static final RegistryObject<Block> OUTDOORSPEAKERS = REGISTRY.register("outdoorspeakers", () -> new OutdoorspeakersBlock());
	public static final RegistryObject<Block> MOBILE_RED_FLAGS = REGISTRY.register("mobile_red_flags", () -> new MobileRedFlagsBlock());
	public static final RegistryObject<Block> MOBILEBLACK = REGISTRY.register("mobileblack", () -> new MobileblackBlock());
	public static final RegistryObject<Block> WINDOWAIRCONDITIONING = REGISTRY.register("windowairconditioning", () -> new WindowairconditioningBlock());
	public static final RegistryObject<Block> WINDOWAIRCONDITIONERBLACKWINDOW = REGISTRY.register("windowairconditionerblackwindow", () -> new WindowairconditionerblackwindowBlock());
	public static final RegistryObject<Block> WINDOWAIRCONDITIONERBLUEWINDOW = REGISTRY.register("windowairconditionerbluewindow", () -> new WindowairconditionerbluewindowBlock());
	public static final RegistryObject<Block> WINDOWAIRCONDITIONERGREENWINDOW = REGISTRY.register("windowairconditionergreenwindow", () -> new WindowairconditionergreenwindowBlock());
	public static final RegistryObject<Block> TV = REGISTRY.register("tv", () -> new TVBlock());
	public static final RegistryObject<Block> NOTV = REGISTRY.register("notv", () -> new NOTVBlock());
	public static final RegistryObject<Block> STUDYHARD = REGISTRY.register("studyhard", () -> new StudyhardBlock());
	public static final RegistryObject<Block> EVERYDAY = REGISTRY.register("everyday", () -> new EverydayBlock());
	public static final RegistryObject<Block> SATELLITETELEVISION = REGISTRY.register("satellitetelevision", () -> new SatellitetelevisionBlock());
	public static final RegistryObject<Block> DTMBDVBT = REGISTRY.register("dtmbdvbt", () -> new DTMBDVBTBlock());
	public static final RegistryObject<Block> NOCRTTV = REGISTRY.register("nocrttv", () -> new NOCRTTVBlock());
	public static final RegistryObject<Block> CRTTV = REGISTRY.register("crttv", () -> new CRTTVBlock());
	public static final RegistryObject<Block> SMALLWINDOWS_1 = REGISTRY.register("smallwindows_1", () -> new Smallwindows1Block());
	public static final RegistryObject<Block> SMALLWINDOWSWHITE = REGISTRY.register("smallwindowswhite", () -> new SmallwindowswhiteBlock());
	public static final RegistryObject<Block> SMALLWINDOWSBLACK = REGISTRY.register("smallwindowsblack", () -> new SmallwindowsblackBlock());
	public static final RegistryObject<Block> SMALLWINDOWSBLACK_1 = REGISTRY.register("smallwindowsblack_1", () -> new Smallwindowsblack1Block());
	public static final RegistryObject<Block> SMALLWINDOWSBLUE = REGISTRY.register("smallwindowsblue", () -> new SmallwindowsblueBlock());
	public static final RegistryObject<Block> SMALLWINDOWSBLUE_1 = REGISTRY.register("smallwindowsblue_1", () -> new Smallwindowsblue1Block());
	public static final RegistryObject<Block> SMALLWINDOWSGREEN = REGISTRY.register("smallwindowsgreen", () -> new SmallwindowsgreenBlock());
	public static final RegistryObject<Block> SMALLWINDOWSGREEN_1 = REGISTRY.register("smallwindowsgreen_1", () -> new Smallwindowsgreen1Block());
	public static final RegistryObject<Block> CORNERWINDOWS = REGISTRY.register("cornerwindows", () -> new CornerwindowsBlock());
	public static final RegistryObject<Block> CORNERWINDOWS_1 = REGISTRY.register("cornerwindows_1", () -> new Cornerwindows1Block());
	public static final RegistryObject<Block> CORNERWINDOWS_2 = REGISTRY.register("cornerwindows_2", () -> new Cornerwindows2Block());
	public static final RegistryObject<Block> CORNERWINDOWS_3 = REGISTRY.register("cornerwindows_3", () -> new Cornerwindows3Block());
	public static final RegistryObject<Block> CORNERWINDOWS_HENGSU = REGISTRY.register("cornerwindows_hengsu", () -> new CornerwindowsHengsuBlock());
	public static final RegistryObject<Block> CORNERWINDOWS_HENGSU_1 = REGISTRY.register("cornerwindows_hengsu_1", () -> new CornerwindowsHengsu1Block());
	public static final RegistryObject<Block> CORNERWINDOWS_HENGSU_3 = REGISTRY.register("cornerwindows_hengsu_3", () -> new CornerwindowsHengsu3Block());
	public static final RegistryObject<Block> CORNERWINDOWS_HENGSU_4 = REGISTRY.register("cornerwindows_hengsu_4", () -> new CornerwindowsHengsu4Block());
	public static final RegistryObject<Block> CORNERWINDOWSSMALL = REGISTRY.register("cornerwindowssmall", () -> new CornerwindowssmallBlock());
	public static final RegistryObject<Block> CORNERWINDOWSSMALL_1 = REGISTRY.register("cornerwindowssmall_1", () -> new Cornerwindowssmall1Block());
	public static final RegistryObject<Block> CORNERWINDOWSSMALL_2 = REGISTRY.register("cornerwindowssmall_2", () -> new Cornerwindowssmall2Block());
	public static final RegistryObject<Block> CORNERWINDOWSSMALL_3 = REGISTRY.register("cornerwindowssmall_3", () -> new Cornerwindowssmall3Block());
	public static final RegistryObject<Block> RADIATOR = REGISTRY.register("radiator", () -> new RadiatorBlock());
	public static final RegistryObject<Block> FM_RADIO = REGISTRY.register("fm_radio", () -> new FMRadioBlock());
	public static final RegistryObject<Block> PODIUM = REGISTRY.register("podium", () -> new PodiumBlock());
	public static final RegistryObject<Block> BLUEMUSICCHAIR = REGISTRY.register("bluemusicchair", () -> new BluemusicchairBlock());
	public static final RegistryObject<Block> ORANGEMUSICCHAIR = REGISTRY.register("orangemusicchair", () -> new OrangemusicchairBlock());
	public static final RegistryObject<Block> GREENMUSICCHAIR = REGISTRY.register("greenmusicchair", () -> new GreenmusicchairBlock());
	public static final RegistryObject<Block> YELLOWMUSICCHAIR = REGISTRY.register("yellowmusicchair", () -> new YellowmusicchairBlock());
	public static final RegistryObject<Block> REDMUSICCHAIR = REGISTRY.register("redmusicchair", () -> new RedmusicchairBlock());
	public static final RegistryObject<Block> VISUALACUITYCHART = REGISTRY.register("visualacuitychart", () -> new VisualacuitychartBlock());
	public static final RegistryObject<Block> CODEFORSTUDENTS = REGISTRY.register("codeforstudents", () -> new CodeforstudentsBlock());
	public static final RegistryObject<Block> PCW_7 = REGISTRY.register("pcw_7", () -> new PCW7Block());
	public static final RegistryObject<Block> SLANTAIRCONDITION = REGISTRY.register("slantaircondition", () -> new SlantairconditionBlock());
	public static final RegistryObject<Block> CIRCULARAIRCONDITIONING = REGISTRY.register("circularairconditioning", () -> new CircularairconditioningBlock());
	public static final RegistryObject<Block> CLASSROOMDOORS = REGISTRY.register("classroomdoors", () -> new ClassroomdoorsBlock());
	public static final RegistryObject<Block> SLIDINGWINDOWS = REGISTRY.register("slidingwindows", () -> new SlidingwindowsBlock());
	public static final RegistryObject<Block> SLIDINGWINDOWS_1 = REGISTRY.register("slidingwindows_1", () -> new Slidingwindows1Block());
	public static final RegistryObject<Block> SLIDINGWINDOWS_BLACK = REGISTRY.register("slidingwindows_black", () -> new SlidingwindowsBlackBlock());
	public static final RegistryObject<Block> SLIDINGWINDOWS_BLACK_1 = REGISTRY.register("slidingwindows_black_1", () -> new SlidingwindowsBlack1Block());
	public static final RegistryObject<Block> SLIDINGWINDOWS_BLUE = REGISTRY.register("slidingwindows_blue", () -> new SlidingwindowsBlueBlock());
	public static final RegistryObject<Block> SLIDINGWINDOWS_BLUE_1 = REGISTRY.register("slidingwindows_blue_1", () -> new SlidingwindowsBlue1Block());
	public static final RegistryObject<Block> SLIDINGWINDOWS_GREEN = REGISTRY.register("slidingwindows_green", () -> new SlidingwindowsGreenBlock());
	public static final RegistryObject<Block> SLIDINGWINDOWS_GREEN_1 = REGISTRY.register("slidingwindows_green_1", () -> new SlidingwindowsGreen1Block());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW = REGISTRY.register("smallslidingwindow", () -> new SmallslidingwindowBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW_1 = REGISTRY.register("smallslidingwindow_1", () -> new Smallslidingwindow1Block());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW_BLACK = REGISTRY.register("smallslidingwindow_black", () -> new SmallslidingwindowBlackBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW_BLACK_1 = REGISTRY.register("smallslidingwindow_black_1", () -> new SmallslidingwindowBlack1Block());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW_BLUE = REGISTRY.register("smallslidingwindow_blue", () -> new SmallslidingwindowBlueBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW_BLUE_1 = REGISTRY.register("smallslidingwindow_blue_1", () -> new SmallslidingwindowBlue1Block());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW_GREEN = REGISTRY.register("smallslidingwindow_green", () -> new SmallslidingwindowGreenBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOW_GREEN_1 = REGISTRY.register("smallslidingwindow_green_1", () -> new SmallslidingwindowGreen1Block());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS = REGISTRY.register("extralargeslidingwindows", () -> new ExtralargeslidingwindowsBlock());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS_1 = REGISTRY.register("extralargeslidingwindows_1", () -> new Extralargeslidingwindows1Block());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS_BLACK = REGISTRY.register("extralargeslidingwindows_black", () -> new ExtralargeslidingwindowsBlackBlock());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS_BLACK_1 = REGISTRY.register("extralargeslidingwindows_black_1", () -> new ExtralargeslidingwindowsBlack1Block());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS_BLUE = REGISTRY.register("extralargeslidingwindows_blue", () -> new ExtralargeslidingwindowsBlueBlock());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS_BLUE_1 = REGISTRY.register("extralargeslidingwindows_blue_1", () -> new ExtralargeslidingwindowsBlue1Block());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS_GREEN = REGISTRY.register("extralargeslidingwindows_green", () -> new ExtralargeslidingwindowsGreenBlock());
	public static final RegistryObject<Block> EXTRALARGESLIDINGWINDOWS_GREEN_1 = REGISTRY.register("extralargeslidingwindows_green_1", () -> new ExtralargeslidingwindowsGreen1Block());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS = REGISTRY.register("largeslidingwindows", () -> new LargeslidingwindowsBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_1 = REGISTRY.register("largeslidingwindows_1", () -> new Largeslidingwindows1Block());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_BLACK = REGISTRY.register("largeslidingwindows_black", () -> new LargeslidingwindowsBlackBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_BLACK_1 = REGISTRY.register("largeslidingwindows_black_1", () -> new LargeslidingwindowsBlack1Block());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_BLUE = REGISTRY.register("largeslidingwindows_blue", () -> new LargeslidingwindowsBlueBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_BLUE_1 = REGISTRY.register("largeslidingwindows_blue_1", () -> new LargeslidingwindowsBlue1Block());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_GREEN = REGISTRY.register("largeslidingwindows_green", () -> new LargeslidingwindowsGreenBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOW_GREEN_1 = REGISTRY.register("largeslidingwindow_green_1", () -> new LargeslidingwindowGreen1Block());
	public static final RegistryObject<Block> MINISLIDINGWINDOW = REGISTRY.register("minislidingwindow", () -> new MinislidingwindowBlock());
	public static final RegistryObject<Block> MINISLIDINGWINDOW_1 = REGISTRY.register("minislidingwindow_1", () -> new Minislidingwindow1Block());
	public static final RegistryObject<Block> MINISLIDINGWINDOW_BLACK = REGISTRY.register("minislidingwindow_black", () -> new MinislidingwindowBlackBlock());
	public static final RegistryObject<Block> MINISLIDINGWINDOW_BLACK_1 = REGISTRY.register("minislidingwindow_black_1", () -> new MinislidingwindowBlack1Block());
	public static final RegistryObject<Block> MINISLIDINGWINDOW_BLUE = REGISTRY.register("minislidingwindow_blue", () -> new MinislidingwindowBlueBlock());
	public static final RegistryObject<Block> MINISLIDINGWINDOW_BLUE_1 = REGISTRY.register("minislidingwindow_blue_1", () -> new MinislidingwindowBlue1Block());
	public static final RegistryObject<Block> MINISLIDINGWINDOW_GREEN = REGISTRY.register("minislidingwindow_green", () -> new MinislidingwindowGreenBlock());
	public static final RegistryObject<Block> MINISLIDINGWINDOW_GREEN_1 = REGISTRY.register("minislidingwindow_green_1", () -> new MinislidingwindowGreen1Block());
	public static final RegistryObject<Block> TABLETENNISTABLE = REGISTRY.register("tabletennistable", () -> new TabletennistableBlock());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW = REGISTRY.register("ontheminislidingwindow", () -> new OntheminislidingwindowBlock());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW_1 = REGISTRY.register("ontheminislidingwindow_1", () -> new Ontheminislidingwindow1Block());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW_BLACK = REGISTRY.register("ontheminislidingwindow_black", () -> new OntheminislidingwindowBlackBlock());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW_BLACK_1 = REGISTRY.register("ontheminislidingwindow_black_1", () -> new OntheminislidingwindowBlack1Block());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW_BLUE = REGISTRY.register("ontheminislidingwindow_blue", () -> new OntheminislidingwindowBlueBlock());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW_BLUE_1 = REGISTRY.register("ontheminislidingwindow_blue_1", () -> new OntheminislidingwindowBlue1Block());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW_GREEN = REGISTRY.register("ontheminislidingwindow_green", () -> new OntheminislidingwindowGreenBlock());
	public static final RegistryObject<Block> ONTHEMINISLIDINGWINDOW_GREEN_1 = REGISTRY.register("ontheminislidingwindow_green_1", () -> new OntheminislidingwindowGreen1Block());
	public static final RegistryObject<Block> LARGEGLASSWINDOW = REGISTRY.register("largeglasswindow", () -> new LargeglasswindowBlock());
	public static final RegistryObject<Block> UPPERWIDEGLASSWINDOWS_BLACK = REGISTRY.register("upperwideglasswindows_black", () -> new UpperwideglasswindowsBlackBlock());
	public static final RegistryObject<Block> UPPERWIDEGLASSWINDOWS_GREEN = REGISTRY.register("upperwideglasswindows_green", () -> new UpperwideglasswindowsGreenBlock());
	public static final RegistryObject<Block> UPPERWIDEGLASSWINDOWS_GREENA = REGISTRY.register("upperwideglasswindows_greena", () -> new UpperwideglasswindowsGreenaBlock());
	public static final RegistryObject<Block> LARGEGLASSWINDOW_Q = REGISTRY.register("largeglasswindow_q", () -> new LargeglasswindowQBlock());
	public static final RegistryObject<Block> LARGEGLASSWINDOWS_BLACK = REGISTRY.register("largeglasswindows_black", () -> new LargeglasswindowsBlackBlock());
	public static final RegistryObject<Block> LARGEGLASSWINDOWS_BLUE = REGISTRY.register("largeglasswindows_blue", () -> new LargeglasswindowsBlueBlock());
	public static final RegistryObject<Block> LARGEGLASSWINDOW_GREEN = REGISTRY.register("largeglasswindow_green", () -> new LargeglasswindowGreenBlock());
	public static final RegistryObject<Block> DESKWITHDESKTOPCOMPUTER = REGISTRY.register("deskwithdesktopcomputer", () -> new DeskwithdesktopcomputerBlock());
	public static final RegistryObject<Block> ON_DESKWITHDESKTOPCOMPUTER = REGISTRY.register("on_deskwithdesktopcomputer", () -> new ONDeskwithdesktopcomputerBlock());
	public static final RegistryObject<Block> ITMUSTHAVEBEEN_OPTIFINETODOIT = REGISTRY.register("itmusthavebeen_optifinetodoit", () -> new ItmusthavebeenOptifinetodoitBlock());
	public static final RegistryObject<Block> BILLBOARDS = REGISTRY.register("billboards", () -> new BillboardsBlock());
	public static final RegistryObject<Block> OUTDOORSLIDINGDOORS = REGISTRY.register("outdoorslidingdoors", () -> new OutdoorslidingdoorsBlock());
	public static final RegistryObject<Block> OUTDOORSLIDINGDOORS_1 = REGISTRY.register("outdoorslidingdoors_1", () -> new Outdoorslidingdoors1Block());
	public static final RegistryObject<Block> TILE = REGISTRY.register("tile", () -> new TileBlock());
	public static final RegistryObject<Block> BLACKTILES = REGISTRY.register("blacktiles", () -> new BlacktilesBlock());
	public static final RegistryObject<Block> LARGETILES = REGISTRY.register("largetiles", () -> new LargetilesBlock());
	public static final RegistryObject<Block> OUTDOORTILES = REGISTRY.register("outdoortiles", () -> new OutdoortilesBlock());
	public static final RegistryObject<Block> MARBLETILES = REGISTRY.register("marbletiles", () -> new MarbletilesBlock());
	public static final RegistryObject<Block> PCWXP = REGISTRY.register("pcwxp", () -> new PCWXPBlock());
	public static final RegistryObject<Block> PCW_8 = REGISTRY.register("pcw_8", () -> new PCW8Block());
	public static final RegistryObject<Block> PCW_10 = REGISTRY.register("pcw_10", () -> new PCW10Block());
	public static final RegistryObject<Block> HIGHSPEEDRAILRAILINGS = REGISTRY.register("highspeedrailrailings", () -> new HighspeedrailrailingsBlock());
	public static final RegistryObject<Block> IRONBARS = REGISTRY.register("ironbars", () -> new IronbarsBlock());
	public static final RegistryObject<Block> DVBCABLE = REGISTRY.register("dvbcable", () -> new DVBCABLEBlock());
	public static final RegistryObject<Block> SCHOOLTABLES = REGISTRY.register("schooltables", () -> new SchooltablesBlock());
	public static final RegistryObject<Block> SQUATTINGURINAL = REGISTRY.register("squattingurinal", () -> new SquattingurinalBlock());
	public static final RegistryObject<Block> CANTEENINSULATEDTABLE = REGISTRY.register("canteeninsulatedtable", () -> new CanteeninsulatedtableBlock());
	public static final RegistryObject<Block> CANTEENKITCHENCOUNTERTOP = REGISTRY.register("canteenkitchencountertop", () -> new CanteenkitchencountertopBlock());
	public static final RegistryObject<Block> CAFETERIAKITCHENSINK = REGISTRY.register("cafeteriakitchensink", () -> new CafeteriakitchensinkBlock());
	public static final RegistryObject<Block> CANTEENKITCHENSTOVE = REGISTRY.register("canteenkitchenstove", () -> new CanteenkitchenstoveBlock());
	public static final RegistryObject<Block> CANTEENKITCHENREFRIGERATOR = REGISTRY.register("canteenkitchenrefrigerator", () -> new CanteenkitchenrefrigeratorBlock());
	public static final RegistryObject<Block> LABORATORYEXHAUSTHOOD = REGISTRY.register("laboratoryexhausthood", () -> new LaboratoryexhausthoodBlock());
	public static final RegistryObject<Block> LABORATORYEXHAUSTHOOD_2_X_2 = REGISTRY.register("laboratoryexhausthood_2_x_2", () -> new Laboratoryexhausthood2X2Block());
	public static final RegistryObject<Block> LARGEGLASSSLIDINGWINDOWS = REGISTRY.register("largeglassslidingwindows", () -> new LargeglassslidingwindowsBlock());
	public static final RegistryObject<Block> Q_LARGEGLASSSLIDINGWINDOWS = REGISTRY.register("q_largeglassslidingwindows", () -> new QLargeglassslidingwindowsBlock());
	public static final RegistryObject<Block> LARGEGLASSSLIDINGWINDOWSBLACK = REGISTRY.register("largeglassslidingwindowsblack", () -> new LargeglassslidingwindowsblackBlock());
	public static final RegistryObject<Block> Q_LARGEGLASSSLIDINGWINDOWSBLACK = REGISTRY.register("q_largeglassslidingwindowsblack", () -> new QLargeglassslidingwindowsblackBlock());
	public static final RegistryObject<Block> LARGEGLASSSLIDINGWINDOWSBLUE = REGISTRY.register("largeglassslidingwindowsblue", () -> new LargeglassslidingwindowsblueBlock());
	public static final RegistryObject<Block> Q_LARGEGLASSSLIDINGWINDOWSBLUE = REGISTRY.register("q_largeglassslidingwindowsblue", () -> new QLargeglassslidingwindowsblueBlock());
	public static final RegistryObject<Block> LARGEGLASSSLIDINGWINDOWSGREEN = REGISTRY.register("largeglassslidingwindowsgreen", () -> new LargeglassslidingwindowsgreenBlock());
	public static final RegistryObject<Block> Q_LARGEGLASSSLIDINGWINDOWSGREEN = REGISTRY.register("q_largeglassslidingwindowsgreen", () -> new QLargeglassslidingwindowsgreenBlock());
	public static final RegistryObject<Block> ACTIVEOPTICALACCESSDEVICES = REGISTRY.register("activeopticalaccessdevices", () -> new ActiveopticalaccessdevicesBlock());
	public static final RegistryObject<Block> REDCONCRETEWALL = REGISTRY.register("redconcretewall", () -> new RedconcretewallBlock());
	public static final RegistryObject<Block> RE_DCONCRETESTAIR = REGISTRY.register("re_dconcretestair", () -> new REDconcretestairBlock());
	public static final RegistryObject<Block> GREENCONCRETEWALL = REGISTRY.register("greenconcretewall", () -> new GreenconcretewallBlock());
	public static final RegistryObject<Block> GREENCONCRETESTAIR = REGISTRY.register("greenconcretestair", () -> new GreenconcretestairBlock());
	public static final RegistryObject<Block> BLUECONCRETEWALL = REGISTRY.register("blueconcretewall", () -> new BlueconcretestairBlock());
	public static final RegistryObject<Block> BLUECONCRETESTAIRQ = REGISTRY.register("blueconcretestairq", () -> new BlueconcretestairqBlock());
	public static final RegistryObject<Block> ORANGECONCRETESTAIR = REGISTRY.register("orangeconcretestair", () -> new OrangeconcretestairBlock());
	public static final RegistryObject<Block> ORANGECONCRETESTAIR_Q = REGISTRY.register("orangeconcretestair_q", () -> new OrangeconcretestairQBlock());
	public static final RegistryObject<Block> YELLOWCONCRETEWALL = REGISTRY.register("yellowconcretewall", () -> new YellowconcretewallBlock());
	public static final RegistryObject<Block> YELLOWCONCRETESTAIR = REGISTRY.register("yellowconcretestair", () -> new YellowconcretestairBlock());
	public static final RegistryObject<Block> BLACKCONCRETEWALL = REGISTRY.register("blackconcretewall", () -> new BlackconcretewallBlock());
	public static final RegistryObject<Block> BLACKCONCRETESTAIR = REGISTRY.register("blackconcretestair", () -> new BlackconcretestairBlock());
	public static final RegistryObject<Block> GREYCONCRETEWALL = REGISTRY.register("greyconcretewall", () -> new GreyconcretewallBlock());
	public static final RegistryObject<Block> GREYCONCRETESTAIR = REGISTRY.register("greyconcretestair", () -> new GreyconcretestairBlock());
	public static final RegistryObject<Block> REDTALLWALL = REGISTRY.register("redtallwall", () -> new RedtallwallBlock());
	public static final RegistryObject<Block> GREENTALLWALL = REGISTRY.register("greentallwall", () -> new GreentallwallBlock());
	public static final RegistryObject<Block> BLUETALLWALL = REGISTRY.register("bluetallwall", () -> new BluetallwallBlock());
	public static final RegistryObject<Block> ORANGETALLWALL = REGISTRY.register("orangetallwall", () -> new OrangetallwallBlock());
	public static final RegistryObject<Block> YELLOWTALLWALL = REGISTRY.register("yellowtallwall", () -> new YellowtallwallBlock());
	public static final RegistryObject<Block> BLACKTALLWALL = REGISTRY.register("blacktallwall", () -> new BlacktallwallBlock());
	public static final RegistryObject<Block> GREYTALLWALL = REGISTRY.register("greytallwall", () -> new GreytallwallBlock());
	public static final RegistryObject<Block> RE_DTALLWALLCORNER = REGISTRY.register("re_dtallwallcorner", () -> new REDtallwallcornerBlock());
	public static final RegistryObject<Block> GREENTALLWALLCORNER = REGISTRY.register("greentallwallcorner", () -> new GreentallwallcornerBlock());
	public static final RegistryObject<Block> BLUETALLWALLCORNER = REGISTRY.register("bluetallwallcorner", () -> new BluetallwallcornerBlock());
	public static final RegistryObject<Block> ORANGETALLWALLCORNER = REGISTRY.register("orangetallwallcorner", () -> new OrangetallwallcornerBlock());
	public static final RegistryObject<Block> YELLOWTALLWALLCORNER = REGISTRY.register("yellowtallwallcorner", () -> new YellowtallwallcornerBlock());
	public static final RegistryObject<Block> BLACKTALLWALLCORNER = REGISTRY.register("blacktallwallcorner", () -> new BlacktallwallcornerBlock());
	public static final RegistryObject<Block> GREYTALLWALLCORNER = REGISTRY.register("greytallwallcorner", () -> new GreytallwallcornerBlock());
	public static final RegistryObject<Block> CASEMENTWINDOWS_1X_2 = REGISTRY.register("casementwindows_1x_2", () -> new Casementwindows1x2Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS_1X_22 = REGISTRY.register("casementwindows_1x_22", () -> new Casementwindows1x22Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS_1X_12 = REGISTRY.register("casementwindows_1x_12", () -> new Casementwindows1x12Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS_1X_13 = REGISTRY.register("casementwindows_1x_13", () -> new Casementwindows1x13Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS = REGISTRY.register("casementwindows", () -> new CasementwindowsBlock());
	public static final RegistryObject<Block> CASEMENTWINDOWS_1 = REGISTRY.register("casementwindows_1", () -> new Casementwindows1Block());
	public static final RegistryObject<Block> CAASEMENTWINDOWS_1X_2 = REGISTRY.register("caasementwindows_1x_2", () -> new Caasementwindows1x2Block());
	public static final RegistryObject<Block> CAASEMENTWINDOWS_1X_22 = REGISTRY.register("caasementwindows_1x_22", () -> new Caasementwindows1x22Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS_1X_21 = REGISTRY.register("casementwindows_1x_21", () -> new Casementwindows1x21Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS_1X_23 = REGISTRY.register("casementwindows_1x_23", () -> new Casementwindows1x23Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS_11 = REGISTRY.register("casementwindows_11", () -> new Casementwindows11Block());
	public static final RegistryObject<Block> CASEMENTWINDOWS_12 = REGISTRY.register("casementwindows_12", () -> new Casementwindows12Block());
	public static final RegistryObject<Block> BROADCASTCREW = REGISTRY.register("broadcastcrew", () -> new BroadcastcrewBlock());
	public static final RegistryObject<Block> FITNESSTREADMILL = REGISTRY.register("fitnesstreadmill", () -> new FitnesstreadmillBlock());
	public static final RegistryObject<Block> TANDEMPEDALTRAINER = REGISTRY.register("tandempedaltrainer", () -> new TandempedaltrainerBlock());
	public static final RegistryObject<Block> ROCKERBOARDFORCHILDREN = REGISTRY.register("rockerboardforchildren", () -> new RockerboardforchildrenBlock());
	public static final RegistryObject<Block> SPACEWALKER = REGISTRY.register("spacewalker", () -> new SpacewalkerBlock());
	public static final RegistryObject<Block> SSCREEED = REGISTRY.register("sscreeed", () -> new SscreeedBlock());
	public static final RegistryObject<Block> PCDELK = REGISTRY.register("pcdelk", () -> new PCDELKBlock());
	public static final RegistryObject<Block> ANTITHEFTNETS_2X_2 = REGISTRY.register("antitheftnets_2x_2", () -> new Antitheftnets2x2Block());
	public static final RegistryObject<Block> ANTITHEFTNETS_2_X_1 = REGISTRY.register("antitheftnets_2_x_1", () -> new Antitheftnets2X1Block());
	public static final RegistryObject<Block> ANTITHEFTNETS_1_X_2 = REGISTRY.register("antitheftnets_1_x_2", () -> new Antitheftnets1X2Block());
	public static final RegistryObject<Block> ANTITHEFTNETS_1_X_1 = REGISTRY.register("antitheftnets_1_x_1", () -> new Antitheftnets1X1Block());
	public static final RegistryObject<Block> ANTITHEFTNETS_AIR = REGISTRY.register("antitheftnets_air", () -> new AntitheftnetsAIRBlock());
	public static final RegistryObject<Block> TOILETDOORPANELS = REGISTRY.register("toiletdoorpanels", () -> new ToiletdoorpanelsBlock());
	public static final RegistryObject<Block> TOILETDOORPANELS_MI = REGISTRY.register("toiletdoorpanels_mi", () -> new ToiletdoorpanelsMIBlock());
	public static final RegistryObject<Block> TOILETDOORS = REGISTRY.register("toiletdoors", () -> new ToiletdoorsBlock());
	public static final RegistryObject<Block> TOILETDOORS_ON = REGISTRY.register("toiletdoors_on", () -> new ToiletdoorsONBlock());
	public static final RegistryObject<Block> TOILETDOORS_MI = REGISTRY.register("toiletdoors_mi", () -> new ToiletdoorsMIBlock());
	public static final RegistryObject<Block> TOILETDOORS_MION = REGISTRY.register("toiletdoors_mion", () -> new ToiletdoorsMIONBlock());
	public static final RegistryObject<Block> UPPERWIDEGLASSWINDOWSBLAC_K_1 = REGISTRY.register("upperwideglasswindowsblac_k_1", () -> new UpperwideglasswindowsblacK1Block());
	public static final RegistryObject<Block> UPPERWIDEGLASSWINDOWSBL_UE = REGISTRY.register("upperwideglasswindowsbl_ue", () -> new UpperwideglasswindowsblUEBlock());
	public static final RegistryObject<Block> UPPERWIDEGLASSWINDOWS_GE = REGISTRY.register("upperwideglasswindows_ge", () -> new UpperwideglasswindowsGEBlock());
	public static final RegistryObject<Block> UPPERWIDEGLASSWINDOWS_WH = REGISTRY.register("upperwideglasswindows_wh", () -> new UpperwideglasswindowsWHBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDO = REGISTRY.register("smallslidingwindo", () -> new SmallslidingwindoBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDO_1 = REGISTRY.register("smallslidingwindo_1", () -> new Smallslidingwindo1Block());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOBBK = REGISTRY.register("smallslidingwindobbk", () -> new SmallslidingwindobbkBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOBK = REGISTRY.register("smallslidingwindobk", () -> new SmallslidingwindobkBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOW = REGISTRY.register("largeslidingwindow", () -> new LargeslidingwindowBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOW_1 = REGISTRY.register("largeslidingwindow_1", () -> new Largeslidingwindow1Block());
	public static final RegistryObject<Block> LARGESLIDINGWINDOBBK = REGISTRY.register("largeslidingwindobbk", () -> new LargeslidingwindobbkBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWSBBK = REGISTRY.register("largeslidingwindowsbbk", () -> new LargeslidingwindowsbbkBlock());
	public static final RegistryObject<Block> SMALLSLIDINWINDOWBLUE = REGISTRY.register("smallslidinwindowblue", () -> new SmallslidinwindowblueBlock());
	public static final RegistryObject<Block> SMALLSLIDIWINDOWBLUE = REGISTRY.register("smallslidiwindowblue", () -> new SmallslidiwindowblueBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_BL = REGISTRY.register("largeslidingwindows_bl", () -> new LargeslidingwindowsBLBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_BLL = REGISTRY.register("largeslidingwindows_bll", () -> new LargeslidingwindowsBLLBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOWGREE = REGISTRY.register("smallslidingwindowgree", () -> new SmallslidingwindowgreeBlock());
	public static final RegistryObject<Block> SMALLSLIDINGWINDOWGRE = REGISTRY.register("smallslidingwindowgre", () -> new SmallslidingwindowgreBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_GE = REGISTRY.register("largeslidingwindows_ge", () -> new LargeslidingwindowsGEBlock());
	public static final RegistryObject<Block> LARGESLIDINGWINDOWS_GF = REGISTRY.register("largeslidingwindows_gf", () -> new LargeslidingwindowsGFBlock());
	public static final RegistryObject<Block> DVBTS = REGISTRY.register("dvbts", () -> new DVBTSBlock());
	public static final RegistryObject<Block> SEE_10 = REGISTRY.register("see_10", () -> new See10Block());
	public static final RegistryObject<Block> UBUNTU = REGISTRY.register("ubuntu", () -> new UbuntuBlock());
	public static final RegistryObject<Block> UBUNTU_SEEWO = REGISTRY.register("ubuntu_seewo", () -> new UbuntuSEEWOBlock());
	public static final RegistryObject<Block> JUNE_1ST_CHILDRENS_NETWORK = REGISTRY.register("june_1st_childrens_network", () -> new June1stChildrensNetworkBlock());
	public static final RegistryObject<Block> OFFS_NETWORK = REGISTRY.register("offs_network", () -> new OFFSNetworkBlock());
	public static final RegistryObject<Block> PIPE = REGISTRY.register("pipe", () -> new PIPEBlock());
	public static final RegistryObject<Block> PIPEB = REGISTRY.register("pipeb", () -> new PIPEBBlock());
	public static final RegistryObject<Block> PIPEC = REGISTRY.register("pipec", () -> new PIPECBlock());
	public static final RegistryObject<Block> PIPED = REGISTRY.register("piped", () -> new PIPEDBlock());
	public static final RegistryObject<Block> PIPEE = REGISTRY.register("pipee", () -> new PIPEEBlock());
	public static final RegistryObject<Block> CLASSCARD_2 = REGISTRY.register("classcard_2", () -> new Classcard2Block());
	public static final RegistryObject<Block> CLASSCARD_3 = REGISTRY.register("classcard_3", () -> new Classcard3Block());
	public static final RegistryObject<Block> HALFWALLFENCE = REGISTRY.register("halfwallfence", () -> new HalfwallfenceBlock());
	public static final RegistryObject<Block> WATERDISPENSER = REGISTRY.register("waterdispenser", () -> new WaterdispenserBlock());
	public static final RegistryObject<Block> TERRAZZO = REGISTRY.register("terrazzo", () -> new TerrazzoBlock());
	public static final RegistryObject<Block> PIPEG = REGISTRY.register("pipeg", () -> new PIPEGBlock());
	public static final RegistryObject<Block> PIPEH = REGISTRY.register("pipeh", () -> new PIPEHBlock());
	public static final RegistryObject<Block> PIPEF = REGISTRY.register("pipef", () -> new PIPEFBlock());
	public static final RegistryObject<Block> PIPEI = REGISTRY.register("pipei", () -> new PIPEIBlock());
	public static final RegistryObject<Block> CORPORATDESK = REGISTRY.register("corporatdesk", () -> new CorporatdeskBlock());
	public static final RegistryObject<Block> PIPEJ = REGISTRY.register("pipej", () -> new PipejBlock());
	public static final RegistryObject<Block> LIGHTCATSETTOPBOX = REGISTRY.register("lightcatsettopbox", () -> new LightcatsettopboxBlock());
	public static final RegistryObject<Block> FLUORESCENTLAMPS = REGISTRY.register("fluorescentlamps", () -> new FluorescentlampsBlock());
	public static final RegistryObject<Block> RECALSOOM = REGISTRY.register("recalsoom", () -> new RecalsoomBlock());
	public static final RegistryObject<Block> RESTAURANTEXHAUSTHOOD = REGISTRY.register("restaurantexhausthood", () -> new RestaurantexhausthoodBlock());

	// Start of user code block custom blocks
	// End of user code block custom blocks
	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class BlocksClientSideHandler {
		@SubscribeEvent
		public static void blockColorLoad(RegisterColorHandlersEvent.Block event) {
			ScreenBlock.blockColorLoad(event);
			SscreeedBlock.blockColorLoad(event);
		}
	}
}
